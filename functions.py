import sqlite3
from datetime import datetime
delimiter_line = '------------------------------------------------'
databaseName = 'DataBase.db'
helpButtonName = '–ü–æ–º–æ—â—åüÜò'
filesFolderName = 'files/'
logFileName = 'LogBot.txt'
admins_list = [441287694, 496537969]


def log(message): # –∑–∞–ø–∏—Å—å –ª–æ–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    try:
        file = open(filesFolderName + logFileName, 'a')
        file.write('\n' + delimiter_line + '\n')
        file.write(str(datetime.now().strftime('%d-%m-%Y %H:%M:%S')))
        if message.from_user.username != 'None' and message.from_user.username is not None:
            file.write('\n–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {0}, (id = {1})\n–¢–µ–∫—Å—Ç - {2}'.format(message.from_user.username,
                                                                            str(message.from_user.id),
                                                                            message.text))
        else:
            file.write('\n–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {0} {1}, (id = {2})\n–¢–µ–∫—Å—Ç - {3}'.format(message.from_user.first_name,
                                                                            message.from_user.last_name,
                                                                            str(message.from_user.id),
                                                                            message.text))
        print('\n' + delimiter_line)
        print(str(datetime.now().strftime('%d-%m-%Y %H:%M:%S')))
        print('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {0}, (id = {1})\n–¢–µ–∫—Å—Ç - {2}'.format(message.from_user.username,
                                                                    str(message.from_user.id),
                                                                    message.text))
        file.close()
    except Exception as e:
        print(e)


def createTables(): # —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ sql –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    try:
        connect = sqlite3.connect(filesFolderName + databaseName)
        cursor = connect.cursor()
        cursor.execute('CREATE TABLE IF NOT EXISTS Users(ID INTEGER,'
                        'UserName TEXT,'
                        'First_Name TEXT,'
                        'Last_Name TEXT,'
                        'Reg_Date TEXT)')

        connect.commit()
        cursor.close()
        connect.close()
    except Exception as e:
        print(e)


def notInLists(message): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–∞–∫–æ–º-–ª–∏–±–æ —Å–ø–∏—Å–∫–µ
    try:
        return True
    except Exception as e:
        print(e)


def isAdmin(ids): # –ø—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    try:
        if int(ids) in admins_list:
            return True
        else:
            return False
    except Exception as e:
        print(e)
